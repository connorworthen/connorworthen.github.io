---
layout: post
title:      "Rails Api / Js Project"
date:       2020-12-03 21:05:40 -0500
permalink:  rails_api_js_project
---


Throughout the creation of my application Restaurant Finder, I struggled through many concepts that I thought I properly understood. Going into this project, I had somewhat of an idea of what I wanted to do. My goal was to have this application be as close to a real world application as it could be. Planning for this project wasnt detailed and failed to look at the scope of what I wanted to accomplish. This became a problem very early on as I started to focus on too much at once. I became cluttered mentally and tried to mutlitask which would just end up slowing me down. Initially the plan was to create an application that would show a range of restaurants and their menus. As well as a user profile, favorites, search bar, and all CRUD actions for a restaurant. 

I chose to start with the CRUD actions for my restaurant. I wanted to have the restaurant image with a modal that would show the all the details of the restaurant. This would go on to become the worst part of my project. The problem I ran into was having the image get passed to backend. I could get all the other attributes passed back but the image always came back as an empty array. After a little research, I was able to find the active storage gem. After the setup of active storage, I was still getting back an empty array. I could get the file while debugging, but the image wasnt passing through as a blob.  I decided to wait a few days and focus on my other tasks in the project to come back with a clear mind. After talking to leads, I realized it was my request that was causing the problems. After scouring the internet, I was able to find a solution. As I went foward working on the project, I realized how time much each feature that I wanted to implent would take. I decided to focus on making sure I had the requirements and organize how I wanted to accomplish each feature. For me, it really helped to draw out the UI and describe what each feature would do. This gave me the ability to organize with a number system to prioritize with feature needed to be done first, but also focus on all the requirements first. With my new plan, I simplifyed the restaurants with the creation of new restaurants and the ability to see the index of all restaurants. For my user profile, a user could now create an account, login, and logout. For my favorites, a user if signed in can favorite a specific restaurant and see all favorited restaurants within their profile page.  


Overall, I am really happy with how my project went. Though this project was the most difficult the so far, I think I learned to most out of any project. Not only, just about Javascript and Rails API, but also how to properly approach and plan a project. Moving foward, I have the proper skills to be well equipped for what all future projects will bring. Programming wise, I learned a ton of about different features in Javascript that I didnt know about before. I now feel confident about using Javascript  and look foward to how much more there is to learn. This project started as my most frustating project but in the end became my favorite project. 
